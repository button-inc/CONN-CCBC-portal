name: Run CCBC tests

env:
  PGPASSWORD: postgres
  PGUSER: postgres
  PGDATABASE: ccbc

on: [workflow_call]

jobs:
  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        working-directory: ./app
        run: yarn

      - name: Run Jest tests
        working-directory: ./app
        run: yarn test

  pgtap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install asdf
        uses: asdf-vm/actions/setup@v1
      - name: Cache asdf Postgres
        uses: actions/cache@v2
        env:
          cache-name: asdf-postgres-cache
        with:
          path: |
            /home/runner/.asdf
          key: ${{ runner.os }}-postgres-14.1-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-postgres-14.1-${{ env.cache-name }}
      - name: Setup Postgres DB
        run: |
          sudo apt-get update
          sudo apt-get install -yqq sqitch libdbd-pg-perl postgresql-client
          asdf plugin-add postgres || true
          asdf plugin-update --all
          asdf install postgres 14.1
          asdf reshim
          pg_ctl start
          createdb ${{ env.PGDATABASE }} || true
          sqitch rebase -y
          sqitch deploy
        working-directory: ./db
      - name: Install pg_prove
        run: sudo cpan TAP::Parser::SourceHandler::pgTAP
        env:
          SHELL: /bin/bash
      - name: Install pgtap
        run: |
          git clone https://github.com/theory/pgtap.git
          cd pgtap
          git checkout v1.2.0
          git branch
          make
          make install
          psql -c 'CREATE EXTENSION pgtap;' || true
      - name: Run Tests
        run: |
          pg_prove --username ${{ env.PGUSER }} --dbname ${{ env.PGDATABASE }} db/test/unit/**/*_test.sql
          pg_prove --username ${{ env.PGUSER }} --dbname ${{ env.PGDATABASE }} db/test/style/*_test.sql --set schemas_to_test=ccbc_public,ccbc_private
